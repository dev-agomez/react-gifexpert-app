{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","x","type","placeholder","value","onChange","target","getGifs","category","a","fetch","encodeURI","resp","json","data","count","gifs","map","img","index","id","title","url","images","downsized_medium","console","log","GifGridItem","className","href","src","alt","GifGrid","loading","notFound","state","setState","useEffect","then","length","useFetchGifs","key","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"8LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,IAEAF,GAAc,SAAAO,GAAC,MAAI,CAACL,MACpBC,EAAc,OAMd,2BACIK,KAAK,OACLC,YAAY,cACZC,MAAOR,EACPS,SAnBc,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,Y,uBCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,sEACEC,MAAM,0CAAD,OAA2CC,UAAUH,GAArD,wDADP,cACbI,EADa,gBAEIA,EAAKC,OAFT,uBAEXC,EAFW,EAEXA,KACJC,EAAQ,EACNC,EAAOF,EAAKG,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,MAAOJ,IACPK,GAAIF,EAAIE,GACRC,MAAQH,EAAIG,MACZC,IAAG,UAAEJ,EAAIK,cAAN,aAAE,EAAYC,iBAAiBF,QAG1CG,QAAQC,IAAIZ,GAZO,kBAaZE,GAbY,4CAAH,sDCEPW,EAAc,SAAC,GAA6B,IAA5BP,EAA2B,EAA3BA,GAAIC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,IAAKH,EAAW,EAAXA,MAEzC,OADAM,QAAQC,IAAIN,EAAIC,EAAOC,GAEnB,yBAAKM,UAAU,oDACX,uBAAGC,KAAMP,EAAKhB,OAAO,UACjB,yBAAKwB,IAAKR,EAAKS,IAAKV,KAExB,2BAAIF,EAAQ,MAASE,KCLpBW,EAAU,SAAC,GAAgB,IAAfxB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEZb,mBAAS,CAC/BmB,KAAK,GACLmB,SAAS,EACTC,UAAU,IALwB,mBAE/BC,EAF+B,KAExBC,EAFwB,KA8BtC,OAvBAX,QAAQC,IAAIlB,GACZ6B,qBAAU,WAEN9B,EAAQC,GAAU8B,MAAK,SAAApB,GACnBO,QAAQC,IAAIR,GACRA,EAAIqB,OAAS,EACbH,EAAS,CACLtB,KAAMI,EACNe,SAAS,EACTC,UAAS,IAGbE,EAAS,CACLtB,KAAMI,EACNe,SAAS,EACTC,UAAS,SAMtB,CAAC1B,IAEG2B,ED3BoCK,CAAahC,GAA1Ce,EAFqB,EAE3BT,KAAamB,EAFc,EAEdA,QAASC,EAFK,EAELA,SAE9B,OACG,oCACC,wBAAIN,UAAU,+CAAgDpB,GAC7DyB,GAAW,uBAAGL,UAAU,oCAAb,eACXM,GAAY,uBAAGN,UAAU,2CAAb,oCAET,yBAAKA,UAAU,aAEPL,EAAON,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACAuB,IAAKvB,EAAIE,IACLF,UEYbwB,EA1BM,WAAK,MAGc/C,mBAAS,CAAC,KAHxB,mBAGfgD,EAHe,KAGHjD,EAHG,KAUtB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQiD,EAAW1B,KAAI,SAACT,EAASoC,GAAV,OACX,kBAAC,EAAD,CAASH,IAAKG,EAAGpC,SAAUA,U,MClBnDqC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d76e47bf.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => { \r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if (inputValue) {\r\n            //setCategories(x => [inputValue,...x]);  \r\n            setCategories(x => [inputValue]);  \r\n            setInputValue(\"\");  \r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Buscar gifs\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}","export const getGifs = async (category) =>{\r\n    const resp   = await fetch(`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=100&api_key=LlK3FOYeTY24ARY87cme0200VTjSVO7a`);\r\n    const { data } = await resp.json(); \r\n    let count = 1;\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            index: count++,\r\n            id: img.id,\r\n            title : img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    console.log(data);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url, index}) => {\r\n    console.log(id, title, url)\r\n    return (\r\n        <div className=\"card animate__animated animate__lightSpeedInLeft\">            \r\n            <a href={url} target=\"_blank\">\r\n                <img src={url} alt={title}/>\r\n            </a>\r\n            <p>{index + \".- \" +  title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const { data: images,loading, notFound } = useFetchGifs(category);\r\n\r\n    return (\r\n       <>\r\n        <h3 className=\"animate__animated animate__lightSpeedInLeft\">{ category }</h3>\r\n        {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n        {notFound && <p className=\"animate__animated animate__bounceInDown\">No hay elementos para mostrar...</p>}\r\n        {\r\n            <div className=\"card-grid\">\r\n                { \r\n                    images.map(img => (\r\n                        <GifGridItem \r\n                        key={img.id} \r\n                        {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        }\r\n       </>\r\n    )\r\n}","import { useState, useEffect } from 'react'\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true,\r\n        notFound: true\r\n    });\r\n    console.log(category)\r\n    useEffect(()=>{\r\n       \r\n        getGifs(category).then(img => {\r\n            console.log(img)\r\n            if (img.length > 0) {\r\n                setState({\r\n                    data: img,\r\n                    loading: false,\r\n                    notFound:false\r\n                });    \r\n            }else{\r\n                setState({\r\n                    data: img,\r\n                    loading: false,\r\n                    notFound:true\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n    }, [category]);\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\n//let count = 0;\r\nconst GifExpertApp = () =>{\r\n    \r\n    //const categories = ['One Punch','Samurai X','Dragon Ball']\r\n    const [categories, setCategories] = useState(['']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     count++;\r\n    //     setCategories(cats => [...cats,'HunteXHunter'+count]);\r\n    // }\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map((category,i) => (\r\n                        <GifGrid key={i} category={category}/>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}