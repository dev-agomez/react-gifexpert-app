{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","x","type","placeholder","value","onKeyPress","event","length","onChange","target","getGifs","category","a","limit","fetch","encodeURI","resp","json","data","count","gifs","map","img","index","id","title","url","images","downsized_medium","GifGridItem","className","href","src","alt","GifGrid","loading","notFound","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"8LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoC5C,OACI,0BAAMC,SAtBW,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAI,eAAgBN,GACxBA,IAEAF,GAAc,SAAAS,GAAC,MAAI,CAACP,MACpBC,EAAc,OAiBd,2BAAKD,GACL,2BACIQ,KAAK,OACLC,YAAY,cACZC,MAAOV,EACPW,WAlBW,SAACC,GAChBZ,GAAcA,EAAWa,QAAU,GACnCf,GAAc,SAAAS,GAAC,MAAI,CAACP,MAGN,KAAfA,GACCF,GAAc,SAAAS,GAAC,MAAI,CAAC,OAExBF,QAAQC,IAAIN,IAWJc,SAxCc,SAACX,GACnBA,IACAF,EAAcE,EAAEY,OAAOL,OACvBL,QAAQC,IAAI,4BAEM,KAAfN,GACCF,GAAc,SAAAS,GAAC,MAAI,CAAC,a,uBCbvBS,EAAO,uCAAG,WAAOC,GAAP,qCAAAC,EAAA,6DAAiBC,EAAjB,+BAAyB,GAAzB,SACEC,MAAM,0CAAD,OAA2CC,UAAUJ,GAArD,kBAAwEE,EAAxE,8CADP,cACbG,EADa,gBAEIA,EAAKC,OAFT,uBAEXC,EAFW,EAEXA,KACJC,EAAQ,EACNC,EAAOF,EAAKG,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,MAAOJ,IACPK,GAAIF,EAAIE,GACRC,MAAQH,EAAIG,MACZC,IAAG,UAAEJ,EAAIK,cAAN,aAAE,EAAYC,iBAAiBF,QATvB,kBAYZN,GAZY,4CAAH,sDCGPS,EAAc,SAAC,GAA4B,EAA3BL,GAA4B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,IAAKH,EAAW,EAAXA,MACzC,OACI,yBAAKO,UAAU,wDACX,yBAAKA,UAAU,WACX,uBAAGC,KAAML,EAAKjB,OAAO,UACjB,yBAAKqB,UAAU,eAAeE,IAAKN,EAAKO,IAAKR,KAEjD,yBAAKK,UAAU,gBACX,wBAAIA,UAAU,cAAcP,EAAQ,MAASE,OCNpDS,EAAU,SAAC,GAAgB,IAAD,ECFX,SAACvB,GAAc,IAAD,EAEZlB,mBAAS,CAC/ByB,KAAK,GACLiB,SAAS,EACTC,UAAU,IALwB,mBAE/BC,EAF+B,KAExBC,EAFwB,KA8BtC,OAvBAvC,QAAQC,IAAIW,GACZ4B,qBAAU,WAEN7B,EAAQC,EAAU,IAAI6B,MAAK,SAAAlB,GACvBvB,QAAQC,IAAIsB,GACRA,EAAIf,OAAS,EACb+B,EAAS,CACLpB,KAAMI,EACNa,SAAS,EACTC,UAAS,IAGbE,EAAS,CACLpB,KAAMI,EACNa,SAAS,EACTC,UAAS,SAMtB,CAACzB,IAEG0B,ED1BoCI,CAFR,EAAd9B,UAEPgB,EAFqB,EAE3BT,KAAaiB,EAFc,EAEdA,QAASC,EAFK,EAELA,SAE9B,OACG,oCAEED,GAAW,uBAAGL,UAAU,oCAAb,eACXM,GAAY,uBAAGN,UAAU,2CAAb,oCAET,yBAAKA,UAAU,aAEPH,EAAON,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACAoB,IAAKpB,EAAIE,IACLF,UEWbqB,EA1BM,WAAK,MAGclD,mBAAS,CAAC,KAHxB,mBAGfmD,EAHe,KAGHpD,EAHG,KAUtB,OACI,oCACI,2DACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQoD,EAAWvB,KAAI,SAACV,EAASkC,GAAV,OACX,kBAAC,EAAD,CAASH,IAAKG,EAAGlC,SAAUA,U,MClBnDmC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.dbead9c4.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => { \r\n        if (e) {\r\n            setInputValue(e.target.value);\r\n            console.log(\"hadleInputChange llamado\");    \r\n\r\n            if(inputValue === \"\"){\r\n                setCategories(x => [\"\"]);   \r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        console.log('handleSubmit', inputValue)\r\n        if (inputValue) {\r\n            //setCategories(x => [inputValue,...x]);  \r\n            setCategories(x => [inputValue]);  \r\n            setInputValue(\"\");  \r\n        }\r\n    }\r\n\r\n    const handleKeyPress = (event) => {\r\n        if (inputValue && inputValue.length >= 2) {\r\n            setCategories(x => [inputValue]);   \r\n        }\r\n\r\n        if(inputValue === \"\"){\r\n            setCategories(x => [\"\"]);   \r\n        }\r\n        console.log(inputValue);\r\n      }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <p>{ inputValue }</p>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Buscar gifs\"\r\n                value={inputValue}\r\n                onKeyPress={handleKeyPress}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}","export const getGifs = async (category, limit = 10) =>{\r\n    const resp   = await fetch(`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=${limit}&api_key=LlK3FOYeTY24ARY87cme0200VTjSVO7a`);\r\n    const { data } = await resp.json(); \r\n    let count = 1;\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            index: count++,\r\n            id: img.id,\r\n            title : img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const GifGridItem = ({id, title, url, index}) => {\r\n    return (\r\n        <div className=\"col-md-4 animate__animated animate__lightSpeedInLeft\">\r\n            <div className=\"card mb\">\r\n                <a href={url} target=\"_blank\">\r\n                    <img className=\"card-img-top\" src={url} alt={title}/>\r\n                </a>                 \r\n                <div className=\"card-body mb\">\r\n                    <h5 className=\"card-title\">{index + \".- \" +  title}</h5>\r\n                </div>\r\n            </div>\r\n        </div>\r\n)}\r\n\r\nGifGridItem.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    index: PropTypes.number.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const { data: images,loading, notFound } = useFetchGifs(category);\r\n\r\n    return (\r\n       <>\r\n        {/* <h3 className=\"animate__animated animate__lightSpeedInLeft\">{ category }</h3> */}\r\n        {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n        {notFound && <p className=\"animate__animated animate__bounceInDown\">No hay elementos para mostrar...</p>}\r\n        {\r\n            <div className=\"card-grid\">\r\n                { \r\n                    images.map(img => (\r\n                        <GifGridItem \r\n                        key={img.id} \r\n                        {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        }\r\n       </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category : PropTypes.string.isRequired\r\n}","import { useState, useEffect } from 'react'\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true,\r\n        notFound: true\r\n    });\r\n    console.log(category)\r\n    useEffect(()=>{\r\n       \r\n        getGifs(category, 50).then(img => {\r\n            console.log(img)\r\n            if (img.length > 0) {\r\n                setState({\r\n                    data: img,\r\n                    loading: false,\r\n                    notFound:false\r\n                });    \r\n            }else{\r\n                setState({\r\n                    data: img,\r\n                    loading: false,\r\n                    notFound:true\r\n                })\r\n            }\r\n            \r\n        });\r\n\r\n    }, [category]);\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\n//let count = 0;\r\nconst GifExpertApp = () =>{\r\n    \r\n    //const categories = ['One Punch','Samurai X','Dragon Ball']\r\n    const [categories, setCategories] = useState(['']);\r\n\r\n    // const handleAdd = () =>{\r\n    //     count++;\r\n    //     setCategories(cats => [...cats,'HunteXHunter'+count]);\r\n    // }\r\n    \r\n    return (\r\n        <>\r\n            <h2>Buscador de im√°genes GIF</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map((category,i) => (\r\n                        <GifGrid key={i} category={category}/>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}